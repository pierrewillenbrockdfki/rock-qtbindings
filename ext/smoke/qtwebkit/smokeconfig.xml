<config>
    <moduleName>qtwebkit</moduleName>
    <parentModules>
        <module>qtcore</module>
        <module>qtgui</module>
    </parentModules>
    <parts>1</parts>
    <scalarTypes>
        <!-- QString is a class, but represented as a scalar (#) in munged names -->
        <typeName>QString</typeName>
    </scalarTypes>
    <voidpTypes>
        <!-- both are classes, but they are represented as Smoke::t_voidp -->
        <typeName>QStringList</typeName>
        <typeName>QString</typeName>
    </voidpTypes>
    <exclude>
        <!-- Looks like the generator/parser has trouble with the local type ConstIterator.
             Maybe an error in our using implementation? -->
        <signature>.*Iterator.* QWebElementCollection::.*\(\).*</signature>
        <signature>QWebElementCollection::.*iterator\* QWebElementCollection::.*iterator::.*iterator\(const .*Iterator&amp;\)</signature>
        <signature>bool QWebElementCollection::.*iterator::operator.*\(const .*Iterator&amp;\) const</signature>
        <signature>.*Iterator.* QWebElementCollection::.*iterator::operator.*\(.*\).*</signature>
        <signature>int QWebElementCollection::.*iterator::operator-\(.*Iterator\) const</signature>
        <signature>QWebElement QWebElementCollection::iterator::operator\*\(\) const</signature>
        <!-- QGlobalSpace: "static" and "QGlobalSpace::" strings are not present when filtering -->
        <!-- Some of these are the result of parse errors. -->
        <!-- There seems to be a parsing problem with the QCbor* classes -->
        <!-- operator[] does not make sense in global space? -->
        <signature>const QCborValue operator\[\]\(.*</signature>
        <signature>QCborValueRef operator\[\]\(.*</signature>
        <signature>QCborArray operator\+\(const QCborValue&amp;\)</signature>
        <signature>QCborArray&amp; operator&lt;&lt;\(const QCborValue&amp;\)</signature>
        <signature>QCborArray&amp; operator\+=\(const QCborValue&amp;\)</signature>
        <signature>QCborValue&amp; operator=\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborArray&amp;\)</signature>
        <signature>bool operator!=\(const QCborValue&amp;\)</signature>
        <signature>bool operator==\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborMap&amp;\)</signature>
        <signature>bool operator!\(\)</signature>
        <signature>void\* operator-&gt;\(\)</signature>
        <!-- This function is templated -->
        <signature>QDebug operator&lt;&lt;\(QDebug,.*</signature>
        <!-- QUrlTwoFlags is templated -->
        <signature>QUrlTwoFlags operator.*</signature>
        <signature>QUrlTwoFlags&amp; operator.*</signature>
        <!-- More template functions -->
        <signature>Code operator Code\(\)</signature>
        <signature>E2 operator int\(\)</signature>
        <signature>E2 operator QFlags&lt;E2&gt;\(\)</signature>
        <signature>E2 operator QFlags&lt;E1&gt;\(\)</signature>
    </exclude>
    <classList>
        <class>QGraphicsWebView</class>
        <class>QWebDatabase</class>
        <class>QWebElement</class>
        <class>QWebElementCollection</class>
        <class>QWebElementCollection::iterator</class>
        <class>QWebElementCollection::const_iterator</class>
        <class>QWebFrame</class>
        <class>QWebHistory</class>
        <class>QWebHistoryInterface</class>
        <class>QWebHistoryItem</class>
        <class>QWebHitTestResult</class>
        <class>QWebInspector</class>
        <class>QWebPage</class>
        <class>QWebPage::ChooseMultipleFilesExtensionOption</class>
        <class>QWebPage::ChooseMultipleFilesExtensionReturn</class>
        <class>QWebPage::ErrorPageExtensionOption</class>
        <class>QWebPage::ErrorPageExtensionReturn</class>
        <class>QWebPage::ExtensionOption</class>
        <class>QWebPage::ExtensionReturn</class>
        <class>QWebPage::ViewportAttributes</class>
        <class>QWebPluginFactory</class>
        <class>QWebPluginFactory::ExtensionOption</class>
        <class>QWebPluginFactory::ExtensionReturn</class>
        <class>QWebPluginFactory::MimeType</class>
        <class>QWebPluginFactory::Plugin</class>
        <class>QWebScriptWorld</class>
        <class>QWebSecurityOrigin</class>
        <class>QWebSettings</class>
        <class>QWebView</class>
    </classList>
</config>
