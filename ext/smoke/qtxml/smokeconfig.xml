<config>
    <moduleName>qtxml</moduleName>
    <parentModules>
        <module>qtcore</module>
    </parentModules>
    <parts>1</parts>
    <scalarTypes>
        <!-- QString is a class, but represented as a scalar (#) in munged names -->
        <typeName>QString</typeName>
    </scalarTypes>
    <voidpTypes>
        <!-- both are classes, but they are represented as Smoke::t_voidp -->
        <typeName>QStringList</typeName>
        <typeName>QString</typeName>
    </voidpTypes>
    <exclude>
        <!-- we don't want private stuff in smoke.. -->
        <signature>.*::d</signature>
        <signature>.*::d_ptr</signature>
        <signature>.*::q_ptr</signature>
        <signature>.*\(.*Private.*\).*</signature>
        <!-- Thread related stuff belongs to the bindings language -->
        <signature>.*QtConcurrent.*</signature>
        <!-- this doesn't link, internal stuff.. -->
        <signature>.*qFindString.*</signature>
        <!-- windows internal helper functions -->
        <signature>.*qFrom.*Endian_helper.*</signature>
        <!-- QGlobalSpace: "static" and "QGlobalSpace::" strings are not present when filtering -->
        <!-- Some of these are the result of parse errors. -->
        <!-- There seems to be a parsing problem with the QCbor* classes -->
        <!-- operator[] does not make sense in global space? -->
        <signature>const QCborValue operator\[\]\(.*</signature>
        <signature>QCborValueRef operator\[\]\(.*</signature>
        <signature>QCborArray operator\+\(const QCborValue&amp;\)</signature>
        <signature>QCborArray&amp; operator&lt;&lt;\(const QCborValue&amp;\)</signature>
        <signature>QCborArray&amp; operator\+=\(const QCborValue&amp;\)</signature>
        <signature>QCborValue&amp; operator=\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborArray&amp;\)</signature>
        <signature>bool operator!=\(const QCborValue&amp;\)</signature>
        <signature>bool operator==\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborValue&amp;\)</signature>
        <signature>bool operator&lt;\(const QCborMap&amp;\)</signature>
        <signature>bool operator!\(\)</signature>
        <signature>void\* operator-&gt;\(\)</signature>
        <!-- This function is templated -->
        <signature>QDebug operator&lt;&lt;\(QDebug,.*</signature>
        <!-- QUrlTwoFlags is templated -->
        <signature>QUrlTwoFlags operator.*</signature>
        <signature>QUrlTwoFlags&amp; operator.*</signature>
        <!-- More template functions -->
        <signature>Code operator Code\(\)</signature>
        <signature>E2 operator int\(\)</signature>
        <signature>E2 operator QFlags&lt;E2&gt;\(\)</signature>
        <signature>E2 operator QFlags&lt;E1&gt;\(\)</signature>
    </exclude>
    <functions>
        <!-- include functions starting with 'q' -->
        <name>^q.*</name>
        <name>.*::q.*</name>
        <!-- and operators -->
        <name>.*operator.*</name>
    </functions>
    <classList>
        <class>QDomAttr</class>
        <class>QDomCDATASection</class>
        <class>QDomCharacterData</class>
        <class>QDomComment</class>
        <class>QDomDocument</class>
        <class>QDomDocumentFragment</class>
        <class>QDomDocumentType</class>
        <class>QDomElement</class>
        <class>QDomEntity</class>
        <class>QDomEntityReference</class>
        <class>QDomImplementation</class>
        <class>QDomNamedNodeMap</class>
        <class>QDomNode</class>
        <class>QDomNodeList</class>
        <class>QDomNotation</class>
        <class>QDomProcessingInstruction</class>
        <class>QDomText</class>        
        <class>QXmlAttributes</class>
        <class>QXmlContentHandler</class>
        <class>QXmlDTDHandler</class>
        <class>QXmlDeclHandler</class>
        <class>QXmlDefaultHandler</class>
        <class>QXmlEntityResolver</class>
        <class>QXmlErrorHandler</class>
        <class>QXmlInputSource</class>
        <class>QXmlLexicalHandler</class>
        <class>QXmlLocator</class>
        <class>QXmlNamespaceSupport</class>
        <class>QXmlParseException</class>
        <class>QXmlReader</class>
        <class>QXmlSimpleReader</class>
        <class>QXmlStreamWriter</class>
     </classList>
</config>
